//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DiabetApp
{
    using System;
    using System.Collections.Generic;
    
    public partial class Diary_Product: PropertyClass
    {
        double calories;
        double protein;
        double fats;
        double carbohydrates;
        double he;
        Nullable<float> grams;

        public int ID { get; set; }
        public Nullable<int> ID_Diary_Line { get; set; }
        public Nullable<int> ID_Product { get; set; }


        public Nullable<float> Grams
        {
            get { return grams; }
            set
            {
                grams = value;
                ProductCalculation();
                OnPropertyChanged("Grams");
            }
        }

        public double Calories
        {
            get
            {
                return calories;
            }
            set { calories = value; OnPropertyChanged("Calories"); }
        }
        public double Protein
        {
            get
            {
                return protein;
            }
            set { protein = value; OnPropertyChanged("Protein"); }
        }
        public double Fats
        {
            get
            {
                return fats;
            }
            set { fats = value; OnPropertyChanged("Fats"); }

        }
        public double Carbohydrates
        {
            get
            {
                return carbohydrates;

            }
            set { carbohydrates = value; OnPropertyChanged("Carbohydrates"); }
        }

        public double HE
        {
            get
            {
                if (Product != null)
                {
                    double gramm = Convert.ToDouble(Grams) / 100;
                    Carbohydrates = Math.Round((double)(Product.Carbohydrates * gramm), 1);
                    return Carbohydrates / 10;
                }
                else
                    return 0;
                //return he;
            }
            set
            {
                he = value; OnPropertyChanged("HE");
            }
        }

        public void ProductCalculation()
        {
            if (Product != null)
            {
                double gramm = Convert.ToDouble(Grams) / 100;
                Protein = Math.Round((double)(Product.Protein * gramm), 1);
                Fats = Math.Round((double)(Product.Fats * gramm), 1);
                Calories = Math.Round((double)(Product.Calories * gramm), 1);
                Carbohydrates = Math.Round((double)(Product.Carbohydrates * gramm), 1);
                HE = Carbohydrates / 10;
            }
        }


        public virtual Diary_Line Diary_Line { get; set; }
        public virtual Product Product { get; set; }



    }
}
